set shell=/bin/bash
set number          " Shows line number
set showmatch       " Show bracket matches
set visualbell      " Disable beep, only visual bell
set hlsearch        " Highlight all search matches
set smartcase       " Pay attention to case when caps
set ignorecase      " Ignore case when search
set incsearch       " Show search results when typing
set hidden          " Allows to change buffer without saving
set timeout timeoutlen=5000 ttimeoutlen=100 " Fixes lag on shift+O
set autoindent      " Sets same indention on new line
set expandtab       " Use spaces, not tabs
set ts=4            " Set indent 4 spaces
set shiftwidth=4    " How much to indent using >>
set softtabstop=4   " Affects tab press
set ruler
set colorcolumn=79  " Vertical ruler, PEP8 helper
set undolevels=1000 " Steps of undo
set backspace=indent,eol,start
set relativenumber  " Changes line nr to relatives
set cursorline      " Hilight current line
set nocompatible    " Remove compatibility with vi
set path+=**        " Better find
set wildmenu        " Display all matching files
set laststatus=2    " File path in status
set t_Co=256        " 256 colors
set clipboard=unnamed " Make yank copy to global clipboard
set list lcs=trail:·,tab:»· " Prettier white space characters
set splitright      " Makes split open on right
set gcr=a:blinkon0  " Disable cursor blinking
set autoread        " Autoload changes
set shortmess+=A    " Ignore annoying swapfile messages
set scrolloff=3     " start scrolling 3 lines before edge of viewport
let mapleader = "," " Sets map leader

"" Indention for html
autocmd Filetype html setlocal ts=2 sts=2 sw=2

"" Auto resize split on window resize
autocmd VimResized * wincmd =

"" Possible fix for slow redrawing
set lazyredraw
set ttyfast

" Quicker buffer change
map <C-K> :bnext<CR>
map <C-J> :bprev<CR>

" Vim swap files and backups directory
if exists('$SUDO_USER')
  set nobackup                        " don't create root-owned files
  set nowritebackup                   " don't create root-owned files
else
  set backupdir=~/local/.vim/tmp/backup
  set backupdir+=~/.vim/tmp/backup    " keep backup files out of the way
  set backupdir+=.
endif

if exists('$SUDO_USER')
  set noswapfile                      " don't create root-owned files
else
  set directory=~/local/.vim/tmp/swap//
  set directory+=~/.vim/tmp/swap//    " keep swap files out of the way
  set directory+=.
endif

set t_Co=256 " Terminal 256 colors
set bg=dark " Dark background

"" Code coloring and indention base ond filetype
syntax on
filetype indent on
filetype plugin on

" Hide banner on edit file browser
let g:netrw_banner=0

" Airline
let g:airline_powerline_fonts=1 " Uses powerline fonts
let g:airline#extensions#branch#enabled=1 " Shows current branch
let g:airline#extensions#tabline#enabled = 1 " Show buffers in tabs
let g:airline#extensions#tmuxline#enabled = 0 " Disable overwrite tmux theme
let g:pymode_virtualenv = 1

" Python-mode
let g:pymode_rope = 0
let g:pymode_rope_lookup_project = 0
let g:pymode_rope_complete_on_dot = 0
let g:pymode_rope_autoimport = 0
let g:pymode_folding = 0
let g:pymode_rope_goto_definition_cmd = 'e'
let g:pymode_options_max_line_length = 79
let g:pymode_lint_options_pep8 = {'max_line_length': g:pymode_options_max_line_length}
let g:pymode_lint_options_pylint = {'max-line-length': g:pymode_options_max_line_length}
set completeopt-=preview

" YouCompleteMe
map <C-]> :YcmCompleter GoTo<CR>
let g:ycm_python_binary_path = 'python'
" NERDtree
map <C-n> :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '__pycache__$']
" Disable scrollbar for NERDtree in MacVim
set guioptions-=L

" Ack.vim to use ag
let g:ackprg = 'ag --vimgrep'

" Bind vim-bbye, delete buffer without closing split
map <Leader>q :Bdelete<CR>

" EatChar stops abbreviations inserting an extra space
function! EatChar(pat)
    let c = nr2char(getchar(0))
    return (c =~ a:pat) ? '' : c
endfunction
function! MakeSpacelessIabbrev(from, to)
    execute "iabbrev <silent> ".a:from." ".a:to."<c-R>=EatChar('\\s')<cr>"
endfunction
function! MakeSpacelessBufferIabbrev(from, to)
    execute "iabbrev <silent> <buffer> ".a:from." ".a:to."<c-R>=EatChar('\\s')<cr>"
endfunction
call MakeSpacelessIabbrev('jiraplat', 'Ticket: https://administrate.atlassian.net/browse/PLAT-')
call MakeSpacelessIabbrev('catplat', 'CAT: https://administrate.atlassian.net/browse/PLAT-')

" vim plug
call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'edkolev/tmuxline.vim'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'python-mode/python-mode'
Plug 'scrooloose/nerdtree'
Plug 'morhetz/gruvbox'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'mileszs/ack.vim'
Plug 'moll/vim-bbye'
call plug#end()
colorscheme gruvbox " Sets colorscheme
